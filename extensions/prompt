# Ideas:
#  - full line prompt?
#  - hostname, colored using hash of hostname
#  - compressed ts

function prompt_git_branch() {
    branch=$(git symbolic-ref HEAD 2> /dev/null || false)
    branch=${branch##*/}
    if [ ! -z $branch ]; then echo " [$branch]"; fi
}

if [ -n "$ZSH_VERSION" ]; then
    # assume Zsh
    autoload -U colors && colors

    # From: https://github.com/robbyrussell/oh-my-zsh/pull/409/files
    function prompt_char {
      if [ $UID -eq 0 ]; then echo "#"; else echo $; fi
    }

    # Via: http://superuser.com/questions/382503/how-can-i-put-a-newline-in-my-zsh-prompt-without-causing-terminal-redraw-issues
    # TODO: Do the thing that termine does where he uses precmd and postcmd to time execution of a command and growl him after a process completes that took longer than X seconds
    precmd() { print -rP "%{$fg[green]%}%n@%m%{$fg[white]%}:%{$fg[blue]%}%~%{$fg[white]%}$(prompt_git_branch)%{$reset_color%}" }
    PROMPT="%(?..%{$fg[red]%}[%?]%{$reset_color%} )$(prompt_char) "

elif [ -n "$BASH_VERSION" ]; then
    # assume Bash
    alias gb=prompt_git_branch
    
    function rv {
      rv=$?
      if [ $rv -ne 0 ]; then echo "($rv) "; fi
    }
    
    function dashes {
      s=`printf "%*s" $COLUMNS`; 
      echo "${s// /-}"
    }
    
    PS1='`rv`${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]`gb`\n\$ '
    #PS1="`dashes`\n`rv`${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]`gb`\n\$ "
else
    # asume something else
    :
fi
